{"name": "test_invest_error[case2]", "status": "failed", "statusDetails": {"message": "AssertionError: assert '购买标的金额不能大于标总金额' == '购买标的金额不能大于标剩余金额'\n  - 购买标的金额不能大于标剩余金额\n  ?            ^^\n  + 购买标的金额不能大于标总金额\n  ?            ^", "trace": "self = <py31_1012.testcase.test_invest.TestInvest object at 0x1088b6250>\ncase = {'amount': '200000000', 'expected': '购买标的金额不能大于标剩余金额', 'title': '投资金额大于剩余金额'}\ninvest_setup = (<page.invest_page.InvestPage object at 0x1088a1990>, <page.user_page.UserPage object at 0x1088a1c10>)\n\n    @pytest.mark.parametrize('case', invest_data.invest_data_is_wrong)\n    def test_invest_error(self, case, invest_setup):\n        print(case)\n        invest_page = invest_setup[0]\n        user_page = invest_setup[1]\n        # 1.投资\n        invest_page.invest(case[\"amount\"])\n        time.sleep(1)\n        invest_page.maxmize_window()\n        # 2.点击投资\n        invest_page.click_invest()\n        expected = case['expected']\n        # 3.获取弹窗提示\n        res = invest_page.get_toast_wrong()\n        time.sleep(1)\n        invest_page.close_wrong_toast()\n        # 4 断言\n        try:\n            assert res == expected\n        except AssertionError as e:\n            log.error(\"用例--{}--执行失败\".format(case['title']))\n            log.exception(e)\n>           raise e\n\ntestcase/test_invest.py:39: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <py31_1012.testcase.test_invest.TestInvest object at 0x1088b6250>\ncase = {'amount': '200000000', 'expected': '购买标的金额不能大于标剩余金额', 'title': '投资金额大于剩余金额'}\ninvest_setup = (<page.invest_page.InvestPage object at 0x1088a1990>, <page.user_page.UserPage object at 0x1088a1c10>)\n\n    @pytest.mark.parametrize('case', invest_data.invest_data_is_wrong)\n    def test_invest_error(self, case, invest_setup):\n        print(case)\n        invest_page = invest_setup[0]\n        user_page = invest_setup[1]\n        # 1.投资\n        invest_page.invest(case[\"amount\"])\n        time.sleep(1)\n        invest_page.maxmize_window()\n        # 2.点击投资\n        invest_page.click_invest()\n        expected = case['expected']\n        # 3.获取弹窗提示\n        res = invest_page.get_toast_wrong()\n        time.sleep(1)\n        invest_page.close_wrong_toast()\n        # 4 断言\n        try:\n>           assert res == expected\nE           AssertionError: assert '购买标的金额不能大于标总金额' == '购买标的金额不能大于标剩余金额'\nE             - 购买标的金额不能大于标剩余金额\nE             ?            ^^\nE             + 购买标的金额不能大于标总金额\nE             ?            ^\n\ntestcase/test_invest.py:35: AssertionError"}, "attachments": [{"name": "log", "source": "97c24cfc-1208-46ac-928e-dc3d8fac20f6-attachment.txt", "type": "text/plain"}, {"name": "stdout", "source": "7f5c249b-79ca-4654-9994-9fe316aeb017-attachment.txt", "type": "text/plain"}, {"name": "stderr", "source": "9d5874e7-ea62-4940-89ec-9d8e46db8643-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "case", "value": "{'title': '投资金额大于剩余金额', 'amount': '200000000', 'expected': '购买标的金额不能大于标剩余金额'}"}], "start": 1603092605333, "stop": 1603092607972, "uuid": "65b89359-76a5-447e-aae6-5ca34be9ce77", "historyId": "b94c7467411fcac23604ffe0ba6a880f", "testCaseId": "6af235eeb686efb1851ff598d389f0f0", "fullName": "testcase.test_invest.TestInvest#test_invest_error", "labels": [{"name": "parentSuite", "value": "testcase"}, {"name": "suite", "value": "test_invest"}, {"name": "subSuite", "value": "TestInvest"}, {"name": "host", "value": "ZBMAC-C02WD0XQH.local"}, {"name": "thread", "value": "15607-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "testcase.test_invest"}]}